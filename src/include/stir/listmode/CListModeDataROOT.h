/*!
  \file
  \ingroup listmode
  \brief Declaration of class stir::ecat::CListModeDataROOT

  \author Nikos Efthimiou
*/

#ifndef __stir_listmode_CListModeDataROOT_H__
#define __stir_listmode_CListModeDataROOT_H__

#include "stir/listmode/CListModeData.h"
#include "stir/listmode/CListRecordROOT.h"
#include "stir/IO/InputStreamWithRecords.h"
#include "stir/IO/InputStreamFromROOTFile.h"
#include "stir/shared_ptr.h"
#include "stir/IO/InterfileHeader.h"
#include <iostream>
#include <string>
#include <utility>
#include <vector>

START_NAMESPACE_STIR

//!
//! \brief The CListModeDataROOT class
//! \details A class that reads the listmode data for any scanner from ROOT files, generated by GATE
//! \author Nikos Efthimiou
//!
class CListModeDataROOT : public CListModeData
{
public:
    //! Construct fron the filename of the Interfile header
    CListModeDataROOT(const std::string& listmode_filename_prefix);

    virtual std::string
    get_name() const;

    virtual
    shared_ptr <CListRecord> get_empty_record_sptr() const;

    virtual
    Succeeded get_next_record(CListRecord& record) const;

    virtual
    Succeeded reset();

    virtual
    SavedPosition save_get_position();

    virtual
    Succeeded set_get_position(const SavedPosition&);

    virtual
    bool has_delayeds() const { return true; }

    //!
    //! \brief get_total_number_of_events
    //! \return Returns the total number of events in a ROOT file
    //! \author Nikos Efthimiou
    //!
    virtual
    long long int
    get_total_number_of_events() const ;

private:
    typedef CListRecordROOT CListRecordT;

    //!
    //! \brief check_scanner_consistency
    //! \return
    //! \author Nikos Efthimiou
    //! \details This function performs simple checks to validate that the repeaters,
    //! are consistent with the header file.
    Succeeded check_scanner_consistency();

    std::string listmode_filename;

    shared_ptr<InputStreamFromROOTFile<CListRecordT, bool> > current_lm_data_ptr;
    shared_ptr<ProjDataInfo> proj_data_info_sptr;

    InterfileHeader interfile_parser;
    // members to store info from the interfile header.
    // These tell us something about how the listmode is stored.
    int axial_compression;
    int maximum_ring_difference;
    int number_of_projections;
    int number_of_views;
    int number_of_segments;
    char name_of_input_tchain;

    //! Number of the rsectors used in the GATE mac file
    int number_of_rsectors;
    //! The x axis would indicate mupliple layers
    int number_of_modules_x;
    //! The y axis indicates the tangestial position
    int number_of_modules_y;
    //! The z axis is the axial
    int number_of_modules_z;

    //! Number of submodules x in the GATE mac file
    int number_of_submodules_x;
    //! Submodule y repeater in the GATE mac file
    int number_of_submodules_y;
    //! Submodule z repeater in the GATE mac file
    int number_of_submodules_z;
    //! Crystal x repeater in the GATE mac file
    int number_of_crystals_x;
    //! Crystla y repeater in the GATE mac file
    int number_of_crystals_y;
    //! Crystal z repeater in the GATE mac file
    int number_of_crystals_z;

   //! Total number of events in the ROOT file
    long long int total_number_of_events;

    Succeeded open_lm_file();
};


END_NAMESPACE_STIR

#endif
