#! /bin/sh
# Shell script for copying Interfile files and their headers
# Restriction: files are assumed to be called .hs .s
# Kris Thielemans 27/07/99
#
echo $#
if test 1 -eq 1; then echo ok; fi
if [ 1 -eq 1 ]; then echo ok; fi
if [ $# -lt 2 ]; then
  echo "Usage: $0 fromfiles destination";
  echo "'fromfiles' can be specified with or without extension"
  echo "When there is more than 1 name in 'fromfiles', 'destination' has "
  echo "to be a directory.";
fi
echo bla
#
# get last argument in a funny way
destination=`echo $* |awk '{ print $NF }'`
# test if last arg is a directory when there are more than 2 arguments
if [ $# -gt 2  -a ! -d $destination ]; then
    echo "Last argument must be a directory when giving more than 1 source";
    exit 1;
fi
#
while [ $# -ge 2 ]; do

	source=$1
	# test if the files exist
	if [ ! -r $source.hs  ]; then 
	  # try to remove the extension
	  if [ -r  ${source%.*}.hs ]; then
	    source=${source%.*};
	  fi
	fi

	filesnotfound=""
	if [ ! -r $source.s ]; then filesnotfound="$source.s"; fi
	if [ ! -r $source.hs ]; then filesnotfound="$filesnotfound $source.hs"; fi
	if [ "X$filesnotfound" != "X" ]; then
	  echo "$0: file(s) $filesnotfound not found. Stopped copying $1.";
	  exit 1;
	fi

	if [ -d $destination ]; then 
	  # append the source name to destination after removal of 
	  # directory specification in source
	  currentdestination=${destination}/${source##*/};
	else
	  currentdestination=${destination}
	fi

	echo "copying $source to $currentdestination";
	cp $source.s $currentdestination.s
        # do headers. Replace $source.s with $currentdestination.s, but
        # dropping any directory specification
        # To be a bit more safe, we try to replace it only when $source.s
        # appears after "file :="
        # (supposedly as part of the "name of data file" keyword)
	inpattern="[Ff][Ii][Ll][Ee].*:=.*$source.s"
	outpattern="file := ${currentdestination##*/}.s"
	cat $source.hs | sed "s!$inpattern!$outpattern!" > $currentdestination.hs

 	# end of processing current arg
	shift;
done









