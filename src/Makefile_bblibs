#
# $Id$: 
#

# name definitions for all libraries
LIB_RECON_BUILDINGBLOCK= \
   ${WORKSPACE}/recon_buildblock/${DEST}librecon_buildblock.a
LIB_BUILDINGBLOCK= \
   ${WORKSPACE}/buildblock/${DEST}libbuildblock.a 
LIB_IO = \
   ${WORKSPACE}/IO/${DEST}libIO.a
LIB_DISPLAY= \
   ${WORKSPACE}/display/${DEST}libdisplay.a
LIB_LOGLIK_BUILDINGBLOCK= \
   ${WORKSPACE}/iterative/LogLik_buildblock/${DEST}libLogLik_buildblock.a

# name definitions for all explicit object files
BUILDBLOCK_REGISTRIES= \
    ${WORKSPACE}/buildblock/$(DEST)buildblock_registries.o
IO_REGISTRIES= \
    ${WORKSPACE}/IO/$(DEST)IO_registries.o

RECON_BUILDBLOCK_REGISTRIES= \
   ${WORKSPACE}/recon_buildblock/$(DEST)recon_buildblock_registries.o

# make rules for the libraries and registries
$(LIB_DISPLAY) : FORCE 
	cd $(WORKSPACE)/display; mkdir -p $(DEST); $(MAKE) all;

$(LIB_BUILDINGBLOCK) $(BUILDBLOCK_REGISTRIES): FORCE
	cd $(WORKSPACE)/buildblock; mkdir -p $(DEST); $(MAKE) all;

$(LIB_IO) $(IO_REGISTRIES): FORCE
	cd $(WORKSPACE)/IO; mkdir -p $(DEST); $(MAKE) all;

$(LIB_RECON_BUILDINGBLOCK) $(RECON_BUILDBLOCK_REGISTRIES) : FORCE
	cd $(WORKSPACE)/recon_buildblock; mkdir -p $(DEST); $(MAKE) all;

${LIB_LOGLIK_BUILDINGBLOCK} : FORCE
	cd $(WORKSPACE)/iterative/LogLik_buildblock; mkdir -p $(DEST); $(MAKE) all;


FORCE:

.PHONY: FORCE

# check if there's a Makefile_bblibs in local/. 
# If so, include it to set its variables
-include $(WORKSPACE)/local/Makefile_bblibs


# BB_LIBS should be set to all libraries we want to link with
# Note that it checks LOCAL_BBLIBS
BB_LIBS =$(LOCAL_BB_LIBS) $(LIB_DISPLAY)  $(LIB_RECON_BUILDINGBLOCK) $(LIB_IO) $(LIB_BUILDINGBLOCK)

# BB_REGISTRIES should be set to all object files we want to link with
# In particular, this should include all global variables of type 
# RegisteredParsingObject::RegisterIt
# Note that it checks LOCAL_BB_REGISTRIES
BB_REGISTRIES=$(LOCAL_BB_REGISTRIES) $(BUILDBLOCK_REGISTRIES) \
	 $(IO_REGISTRIES) $(RECON_BUILDBLOCK_REGISTRIES)

# Default rule for making executables
# Note: this rule has to occur AFTER the definition of the BB_LIBS
# et al macros otherwise the value of the macros is empty when 
# checking the dependencies (even when they are alright when
# executing the corresponding command)
${DEST}%: ${DEST}%.o $(BB_LIBS) $(BB_REGISTRIES)
	$(CXX) $(CFLAGS)  -o $@ $< $(BB_REGISTRIES) $(BB_LIBS)  $(LINK_OPT) $(SYS_LIBS) $(GRAPH_LIBS)
